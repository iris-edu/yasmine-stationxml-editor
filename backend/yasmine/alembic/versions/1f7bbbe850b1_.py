# ****************************************************************************
#
# This file is part of the yasmine editing tool.
#
# yasmine (Yet Another Station Metadata INformation Editor), a tool to
# create and edit station metadata information in FDSN stationXML format,
# is a common development of IRIS and RESIF.
# Development and addition of new features is shared and agreed between * IRIS and RESIF.
#
#
# Version 1.0 of the software was funded by SAGE, a major facility fully
# funded by the National Science Foundation (EAR-1261681-SAGE),
# development done by ISTI and led by IRIS Data Services.
# Version 2.0 of the software was funded by CNRS and development led by * RESIF.
#
# This program is free software; you can redistribute it
# and/or modify it under the terms of the GNU Lesser General Public
# License as published by the Free Software Foundation; either
# version 3 of the License, or (at your option) any later version. *
# This program is distributed in the hope that it will be
# useful, but WITHOUT ANY WARRANTY; without even the implied warranty
# of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU Lesser General Public License (GNU-LGPL) for more details. *
# You should have received a copy of the GNU Lesser General Public
# License along with this software. If not, see
# <https://www.gnu.org/licenses/>
#
#
# 2019/10/07 : version 2.0.0 initial commit
#
# ****************************************************************************/


#@PydevCodeAnalysisIgnore
"""empty message

Revision ID: 1f7bbbe850b1
Revises: 
Create Date: 2018-08-24 12:13:50.225532

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '1f7bbbe850b1'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('config',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('group', sa.String(length=50), nullable=False),
    sa.Column('name', sa.String(length=50), nullable=False),
    sa.Column('value', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('xml',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('source', sa.Text(), nullable=True),
    sa.Column('module', sa.Text(), nullable=True),
    sa.Column('uri', sa.Text(), nullable=True),
    sa.Column('sender', sa.Text(), nullable=True),
    sa.Column('created_at', sa.DateTime(), nullable=False),
    sa.Column('updated_at', sa.DateTime(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_xml_id'), 'xml', ['id'], unique=True)
    op.create_table('xml_node',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('clazz', sa.Text(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['parent_id'], ['xml_node.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_xml_node_id'), 'xml_node', ['id'], unique=True)
    op.create_table('xml_node_attr_type',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_xml_node_attr_type_id'), 'xml_node_attr_type', ['id'], unique=True)
    op.create_table('xml_node_attribute',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('widget_id', sa.Integer(), nullable=False),
    sa.Column('index', sa.Integer(), server_default='0', nullable=False),
    sa.ForeignKeyConstraint(['widget_id'], ['xml_node_attr_type.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_xml_node_attribute_id'), 'xml_node_attribute', ['id'], unique=True)
    op.create_table('xml_node_instance',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('start_date', sa.DateTime(), nullable=True),
    sa.Column('end_date', sa.DateTime(), nullable=True),
    sa.Column('xml_id', sa.Integer(), nullable=True),
    sa.Column('node_id', sa.Integer(), nullable=False),
    sa.Column('parent_id', sa.Integer(), nullable=True),
    sa.ForeignKeyConstraint(['node_id'], ['xml_node.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['parent_id'], ['xml_node_instance.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['xml_id'], ['xml.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_xml_node_instance_id'), 'xml_node_instance', ['id'], unique=True)
    op.create_table('xml_node_attr_value',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('value', sa.Text(), nullable=True),
    sa.Column('attr_id', sa.Integer(), nullable=False),
    sa.Column('node_inst_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['attr_id'], ['xml_node_attribute.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['node_inst_id'], ['xml_node_instance.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_xml_node_attr_value_id'), 'xml_node_attr_value', ['id'], unique=True)
    op.create_table('xml_node_attribute_relation',
    sa.Column('node_id', sa.Integer(), nullable=False),
    sa.Column('attr_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['attr_id'], ['xml_node_attribute.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['node_id'], ['xml_node.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('node_id', 'attr_id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('xml_node_attribute_relation')
    op.drop_index(op.f('ix_xml_node_attr_value_id'), table_name='xml_node_attr_value')
    op.drop_table('xml_node_attr_value')
    op.drop_index(op.f('ix_xml_node_instance_id'), table_name='xml_node_instance')
    op.drop_table('xml_node_instance')
    op.drop_index(op.f('ix_xml_node_attribute_id'), table_name='xml_node_attribute')
    op.drop_table('xml_node_attribute')
    op.drop_index(op.f('ix_xml_node_attr_type_id'), table_name='xml_node_attr_type')
    op.drop_table('xml_node_attr_type')
    op.drop_index(op.f('ix_xml_node_id'), table_name='xml_node')
    op.drop_table('xml_node')
    op.drop_index(op.f('ix_xml_id'), table_name='xml')
    op.drop_table('xml')
    op.drop_table('config')
    # ### end Alembic commands ###
